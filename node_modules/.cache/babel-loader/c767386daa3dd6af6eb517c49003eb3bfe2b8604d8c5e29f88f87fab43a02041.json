{"ast":null,"code":"var _jsxFileName = \"/Users/bryen/Documents/ReactProject/myproject/src/components/searchForm.js\",\n  _s = $RefreshSig$();\n// import { useForm } from 'react-hook-form';\n// import { yupResolver } from '@hookform/resolvers/yup'\nimport { TextField, Button, Typography } from '@mui/material';\n// import { useFormik } from 'formik';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  // set project name restriction\n  projectName: yup.string().min(3, \"Project Name must be 3 characters or longer\").required('Project Name is required'),\n  //set scanning mode restriction\n  scanningMode: yup.string().oneOf(['GANTRY', 'CRAWLER', 'AUTO', 'MANUAL', 'ARM'], 'Invalid scanning mode'),\n  //set dimension x restriction\n  scanDimensionsX: yup.number().moreThan(0, \"scanDimensionsX must be more than 0\").required(\"scanDimensionsX is required\"),\n  //set dimension y restriction\n  scanDimensionsY: yup.number().moreThan(0, \"scanDimensionsY must be more than 0\").required(\"scanDimensionsY is required\"),\n  //set scanner freq restriction\n  scannerFrequency: yup.number().test('decimal', 'Number must have only one decimal point', value => {\n    if (value === undefined || value === null) return true;\n    return /^\\d+(\\.\\d{1})?\\d*$/.test(String(value));\n  })\n});\nfunction submitValues(values) {\n  var url = \"https://wavescan-internship.saurabhmudgal.repl.co/submitForm\";\n}\nfunction useMaterialUI(props) {\n  _s();\n  const formvik = useFormik({\n    initialValues: {\n      projectName: '',\n      scanningMode: '',\n      scanDimensionsX: 0,\n      scanDimensionsY: 0,\n      scannerFrequency: 0.0\n    },\n    validationSchema: schema,\n    onSubmit: values => {\n      alert(JSON.stringify(values));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formvik.handleSubmit,\n      style: props.style,\n      className: props.className,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        id: \"projectName\",\n        name: \"projectName\",\n        label: \"Project Name\",\n        value: formvik.values.projectName,\n        onChange: formvik.handleChange,\n        error: formvik.touched.projectName && Boolean(formvik.errors.projectName),\n        helperText: formvik.touched.projectName && formvik.errors.projectName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        id: \"scanningMode\",\n        name: \"scanningMode\",\n        label: \"Scanning Mode\",\n        value: formvik.values.scanningMode,\n        onChange: formvik.handleChange,\n        error: formvik.touched.scanningMode && Boolean(formvik.errors.scanningMode),\n        helperText: formvik.touched.scanningMode && formvik.errors.scanningMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        id: \"scanDimensionsX\",\n        name: \"scanDimensionsX\",\n        label: \"Scanning Dimension X\",\n        value: formvik.values.scanDimensionsX,\n        onChange: formvik.handleChange,\n        error: formvik.touched.scanDimensionsX && Boolean(formvik.errors.scanDimensionsX),\n        helperText: formvik.touched.scanDimensionsX && formvik.errors.scanDimensionsX\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        id: \"scanDimensionsY\",\n        name: \"scanDimensionsY\",\n        label: \"Scanning Dimension Y\",\n        value: formvik.values.scanDimensionsY,\n        onChange: formvik.handleChange,\n        error: formvik.touched.scanDimensionsY && Boolean(formvik.errors.scanDimensionsY),\n        helperText: formvik.touched.scanDimensionsY && formvik.errors.scanDimensionsY\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        id: \"scannerFrequency\",\n        name: \"scannerFrequency\",\n        label: \"Scanner Frequency\",\n        value: formvik.values.scannerFrequency,\n        onChange: formvik.handleChange,\n        error: formvik.touched.scannerFrequency && Boolean(formvik.errors.scannerFrequency),\n        helperText: formvik.touched.scannerFrequency && formvik.errors.scannerFrequency\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"contained\",\n        fullWidth: true,\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(useMaterialUI, \"YCG3H5Xs9W0Z9715y8Dv70jvAj8=\", false, function () {\n  return [useFormik];\n});\n;\nReactDOM.render( /*#__PURE__*/_jsxDEV(\"useMaterialUI\", {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 91,\n  columnNumber: 17\n}, this), document.getElementById('root'));\nexport default useMaterialUI;","map":{"version":3,"names":["TextField","Button","Typography","React","ReactDOM","useFormik","yup","jsxDEV","_jsxDEV","schema","object","shape","projectName","string","min","required","scanningMode","oneOf","scanDimensionsX","number","moreThan","scanDimensionsY","scannerFrequency","test","value","undefined","String","submitValues","values","url","useMaterialUI","props","_s","formvik","initialValues","validationSchema","onSubmit","alert","JSON","stringify","children","handleSubmit","style","className","fullWidth","id","name","label","onChange","handleChange","error","touched","Boolean","errors","helperText","fileName","_jsxFileName","lineNumber","columnNumber","color","variant","type","render","document","getElementById"],"sources":["/Users/bryen/Documents/ReactProject/myproject/src/components/searchForm.js"],"sourcesContent":["// import { useForm } from 'react-hook-form';\n// import { yupResolver } from '@hookform/resolvers/yup'\nimport { TextField, Button, Typography } from '@mui/material';\n// import { useFormik } from 'formik';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nconst schema = yup.object().shape({\n    // set project name restriction\n    projectName: yup.string().min(3, \"Project Name must be 3 characters or longer\")\n    .required('Project Name is required'),\n    //set scanning mode restriction\n    scanningMode: yup.string().oneOf(['GANTRY', 'CRAWLER', 'AUTO', 'MANUAL', 'ARM'], 'Invalid scanning mode'),\n    //set dimension x restriction\n    scanDimensionsX: yup.number().moreThan(0,\"scanDimensionsX must be more than 0\")\n    .required(\"scanDimensionsX is required\"),\n    //set dimension y restriction\n    scanDimensionsY: yup.number().moreThan(0, \"scanDimensionsY must be more than 0\")\n    .required(\"scanDimensionsY is required\"),\n    //set scanner freq restriction\n    scannerFrequency: yup.number().test('decimal', 'Number must have only one decimal point', \n    (value) => {\n      if (value === undefined || value === null) return true;\n      return (/^\\d+(\\.\\d{1})?\\d*$/).test(String(value));\n    })\n})\n\nfunction submitValues(values){\n    var url = \"https://wavescan-internship.saurabhmudgal.repl.co/submitForm\";\n    \n}\nfunction useMaterialUI(props){\n\n\n    const formvik = useFormik({\n        initialValues:{\n            projectName: '',\n            scanningMode: '',\n            scanDimensionsX: 0,\n            scanDimensionsY: 0,\n            scannerFrequency: 0.0\n        },\n        validationSchema: schema,\n        onSubmit: (values) =>{\n            alert(JSON.stringify(values))\n        }\n    });\n    return (\n    <div>\n        <form onSubmit={formvik.handleSubmit} style={props.style} className={props.className}>\n            <TextField \n            fullWidth id=\"projectName\" name=\"projectName\" label=\"Project Name\"\n            value={formvik.values.projectName}\n            onChange={formvik.handleChange}\n            error={formvik.touched.projectName && Boolean(formvik.errors.projectName)}\n            helperText={formvik.touched.projectName && formvik.errors.projectName}/>\n            <TextField \n            fullWidth id=\"scanningMode\" name=\"scanningMode\" label=\"Scanning Mode\"\n            value={formvik.values.scanningMode}\n            onChange={formvik.handleChange}\n            error={formvik.touched.scanningMode && Boolean(formvik.errors.scanningMode)}\n            helperText={formvik.touched.scanningMode && formvik.errors.scanningMode}/>\n            <TextField \n            fullWidth id=\"scanDimensionsX\" name=\"scanDimensionsX\" label=\"Scanning Dimension X\"\n            value={formvik.values.scanDimensionsX}\n            onChange={formvik.handleChange}\n            error={formvik.touched.scanDimensionsX && Boolean(formvik.errors.scanDimensionsX)}\n            helperText={formvik.touched.scanDimensionsX && formvik.errors.scanDimensionsX}/>\n            <TextField \n            fullWidth id=\"scanDimensionsY\" name=\"scanDimensionsY\" label=\"Scanning Dimension Y\"\n            value={formvik.values.scanDimensionsY}\n            onChange={formvik.handleChange}\n            error={formvik.touched.scanDimensionsY && Boolean(formvik.errors.scanDimensionsY)}\n            helperText={formvik.touched.scanDimensionsY && formvik.errors.scanDimensionsY}/>\n            <TextField \n            fullWidth id=\"scannerFrequency\" name=\"scannerFrequency\" label=\"Scanner Frequency\"\n            value={formvik.values.scannerFrequency}\n            onChange={formvik.handleChange}\n            error={formvik.touched.scannerFrequency && Boolean(formvik.errors.scannerFrequency)}\n            helperText={formvik.touched.scannerFrequency && formvik.errors.scannerFrequency}/>\n            <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n            Submit\n            </Button>\n        </form>\n    </div>\n    )\n};\n\nReactDOM.render(<useMaterialUI />, document.getElementById('root'));\nexport default useMaterialUI"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}