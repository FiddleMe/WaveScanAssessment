{"ast":null,"code":"var _jsxFileName = \"/Users/bryen/Documents/ReactProject/myproject/src/components/searchForm.js\",\n  _s = $RefreshSig$();\n// import { useForm } from 'react-hook-form';\n// import { yupResolver } from '@hookform/resolvers/yup'\nimport React from 'react';\n// import ReactDOM from 'react-dom';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { TextField, Button } from '@mui/material';\nimport '../styles/searchButton.css';\n// import { useFormik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  // set project name restriction\n  projectName: yup.string().min(3, \"Project Name must be 3 characters or longer\").required('Project Name is required'),\n  //set scanning mode restriction\n  scanningMode: yup.string().oneOf(['GANTRY', 'CRAWLER', 'AUTO', 'MANUAL', 'ARM'], 'Invalid scanning mode'),\n  //set dimension x restriction\n  scanDimensionsX: yup.number(\"Scan Dimensions must be a number\").moreThan(0, \"scanDimensionsX must be more than 0\").required(\"scanDimensionsX is required\"),\n  //set dimension y restriction\n  scanDimensionsY: yup.number(\"Scan Dimensions must be a number\").moreThan(0, \"scanDimensionsY must be more than 0\").required(\"scanDimensionsY is required\"),\n  //set scanner freq restriction\n  scannerFrequency: yup.number(\"Scan Dimensions must be a number\").test('decimal', 'Number must have only one decimal point', value => {\n    if (value === undefined || value === null) return true;\n    return /^\\d+(\\.\\d{1})?\\d*$/.test(String(value));\n  })\n});\n\n// function submitValues(values){\n//     var url = \"https://wavescan-internship.saurabhmudgal.repl.co/submitForm\";\n\n// }\nconst styes = {\n  border: '3px solid black'\n};\nfunction UseMaterial(props) {\n  _s();\n  const formvik = useFormik({\n    initialValues: {\n      projectName: '',\n      scanningMode: ''\n    },\n    validationSchema: schema,\n    onSubmit: values => {\n      alert(JSON.stringify(values));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formvik.handleSubmit,\n      style: props.style,\n      className: props.className,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        sx: {},\n        fullWidth: true,\n        id: \"projectName\",\n        name: \"projectName\",\n        label: \"Project Name\",\n        value: formvik.values.projectName,\n        onChange: formvik.handleChange,\n        error: formvik.touched.projectName && Boolean(formvik.errors.projectName),\n        helperText: formvik.touched.projectName && formvik.errors.projectName,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        id: \"scanningMode\",\n        name: \"scanningMode\",\n        label: \"Scanning Mode\",\n        value: formvik.values.scanningMode,\n        onChange: formvik.handleChange,\n        error: formvik.touched.scanningMode && Boolean(formvik.errors.scanningMode),\n        helperText: formvik.touched.scanningMode && formvik.errors.scanningMode,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        type: 'number',\n        fullWidth: true,\n        id: \"scanDimensionsX\",\n        name: \"scanDimensionsX\",\n        label: \"Scanning Dimension X\",\n        value: formvik.values.scanDimensionsX,\n        onChange: formvik.handleChange,\n        error: formvik.touched.scanDimensionsX && Boolean(formvik.errors.scanDimensionsX),\n        helperText: formvik.touched.scanDimensionsX && formvik.errors.scanDimensionsX,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        type: 'number',\n        fullWidth: true,\n        id: \"scanDimensionsY\",\n        name: \"scanDimensionsY\",\n        label: \"Scanning Dimension Y\",\n        value: formvik.values.scanDimensionsY,\n        onChange: formvik.handleChange,\n        error: formvik.touched.scanDimensionsY && Boolean(formvik.errors.scanDimensionsY),\n        helperText: formvik.touched.scanDimensionsY && formvik.errors.scanDimensionsY,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        type: 'number',\n        fullWidth: true,\n        id: \"scannerFrequency\",\n        name: \"scannerFrequency\",\n        label: \"Scanner Frequency\",\n        value: formvik.values.scannerFrequency,\n        onChange: formvik.handleChange,\n        error: formvik.touched.scannerFrequency && Boolean(formvik.errors.scannerFrequency),\n        helperText: formvik.touched.scannerFrequency && formvik.errors.scannerFrequency,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"contained\",\n        fullWidth: true,\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(UseMaterial, \"YCG3H5Xs9W0Z9715y8Dv70jvAj8=\", false, function () {\n  return [useFormik];\n});\n_c = UseMaterial;\n;\nexport default UseMaterial;\nvar _c;\n$RefreshReg$(_c, \"UseMaterial\");","map":{"version":3,"names":["React","useFormik","yup","TextField","Button","jsxDEV","_jsxDEV","schema","object","shape","projectName","string","min","required","scanningMode","oneOf","scanDimensionsX","number","moreThan","scanDimensionsY","scannerFrequency","test","value","undefined","String","styes","border","UseMaterial","props","_s","formvik","initialValues","validationSchema","onSubmit","values","alert","JSON","stringify","children","handleSubmit","style","className","sx","fullWidth","id","name","label","onChange","handleChange","error","touched","Boolean","errors","helperText","margin","fileName","_jsxFileName","lineNumber","columnNumber","type","color","variant","_c","$RefreshReg$"],"sources":["/Users/bryen/Documents/ReactProject/myproject/src/components/searchForm.js"],"sourcesContent":["// import { useForm } from 'react-hook-form';\n// import { yupResolver } from '@hookform/resolvers/yup'\nimport React from 'react';\n// import ReactDOM from 'react-dom';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport {TextField,Button} from '@mui/material';\nimport '../styles/searchButton.css'\n// import { useFormik } from 'formik';\n\n\nconst schema = yup.object().shape({\n    // set project name restriction\n    projectName: yup.string().min(3, \"Project Name must be 3 characters or longer\")\n    .required('Project Name is required'),\n    //set scanning mode restriction\n    scanningMode: yup.string().oneOf(['GANTRY', 'CRAWLER', 'AUTO', 'MANUAL', 'ARM'], 'Invalid scanning mode'),\n    //set dimension x restriction\n    scanDimensionsX: yup.number(\"Scan Dimensions must be a number\").moreThan(0,\"scanDimensionsX must be more than 0\")\n    .required(\"scanDimensionsX is required\"),\n    //set dimension y restriction\n    scanDimensionsY: yup.number(\"Scan Dimensions must be a number\").moreThan(0, \"scanDimensionsY must be more than 0\")\n    .required(\"scanDimensionsY is required\"),\n    //set scanner freq restriction\n    scannerFrequency: yup.number(\"Scan Dimensions must be a number\").test('decimal', 'Number must have only one decimal point', \n    (value) => {\n      if (value === undefined || value === null) return true;\n      return (/^\\d+(\\.\\d{1})?\\d*$/).test(String(value));\n    })\n})\n\n// function submitValues(values){\n//     var url = \"https://wavescan-internship.saurabhmudgal.repl.co/submitForm\";\n    \n// }\nconst styes = {\n    border: '3px solid black'\n}\nfunction UseMaterial(props){\n    const formvik = useFormik({\n        initialValues:{\n            projectName: '',\n            scanningMode: '',\n            \n        },\n        validationSchema: schema,\n        onSubmit: (values) =>{\n            alert(JSON.stringify(values))\n        }\n    });\n    return (\n    <div>\n        <form onSubmit={formvik.handleSubmit} style={props.style} className={props.className}>\n            <TextField \n            sx={{}}\n            fullWidth id=\"projectName\" name=\"projectName\" label=\"Project Name\"\n            value={formvik.values.projectName}\n            onChange={formvik.handleChange}\n            error={formvik.touched.projectName && Boolean(formvik.errors.projectName)}\n            helperText={formvik.touched.projectName && formvik.errors.projectName} \n            margin=\"normal\"\n            />\n            <TextField \n            fullWidth id=\"scanningMode\" name=\"scanningMode\" label=\"Scanning Mode\"\n            value={formvik.values.scanningMode}\n            onChange={formvik.handleChange}\n            error={formvik.touched.scanningMode && Boolean(formvik.errors.scanningMode)}\n            helperText={formvik.touched.scanningMode && formvik.errors.scanningMode} \n            margin=\"normal\"\n            />\n            <TextField \n            type={'number'}\n            fullWidth id=\"scanDimensionsX\" name=\"scanDimensionsX\" label=\"Scanning Dimension X\"\n            value={formvik.values.scanDimensionsX}\n            onChange={formvik.handleChange}\n            error={formvik.touched.scanDimensionsX && Boolean(formvik.errors.scanDimensionsX)}\n            helperText={formvik.touched.scanDimensionsX && formvik.errors.scanDimensionsX} \n            margin=\"normal\"\n            />\n            <TextField \n            type={'number'}\n            fullWidth id=\"scanDimensionsY\" name=\"scanDimensionsY\" label=\"Scanning Dimension Y\"\n            value={formvik.values.scanDimensionsY}\n            onChange={formvik.handleChange}\n            error={formvik.touched.scanDimensionsY && Boolean(formvik.errors.scanDimensionsY)}\n            helperText={formvik.touched.scanDimensionsY && formvik.errors.scanDimensionsY} \n            margin=\"normal\"\n            />\n            <TextField \n            type={'number'}\n            fullWidth id=\"scannerFrequency\" name=\"scannerFrequency\" label=\"Scanner Frequency\"\n            value={formvik.values.scannerFrequency}\n            onChange={formvik.handleChange}\n            error={formvik.touched.scannerFrequency && Boolean(formvik.errors.scannerFrequency)}\n            helperText={formvik.touched.scannerFrequency && formvik.errors.scannerFrequency} \n            margin=\"normal\"\n            />\n            <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n                Submit\n            </Button>\n        </form>\n    </div>\n    )\n};\nexport default UseMaterial;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}